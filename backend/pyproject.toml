[tool.poetry]
name = "pet-proj1"
version = "0.1.0"
description = ""
authors = ["Vladislav Smuglienko <smuglik26@yandex.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.108"
uvicorn = "^0.25"
pydantic = { extras = ["email"], version = "^2.5" }
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.25"
psycopg = { extras = ["binary"], version = "^3.1" }
alembic = "^1.13"
redis = {extras = ["hiredis"], version = "^5.0"}
structlog = "^23.3.0"
bcrypt = "^4.1.2"
argon2-cffi = "^23.1.0"
prometheus-fastapi-instrumentator = "^6.1.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.1"


[tool.poetry.group.generator.dependencies]
mimesis = "^11.1"
greenlet = "^3.0.3"

[tool.ruff]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "ANN", # flake8-annotations
    "S", # flake8-bandit
    "A", # flake8-builtins
    "COM", # flake8-commas
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PT", # flake8-pytest-style
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
]
exclude = [
    ".venv/",
    "venv/",
]
ignore = [
    "S101",
    "ANN101",
    "ANN102",
    "COM812",
]
line-length = 120
src = ["."]
target-version = "py311"

[tool.ruff.format]
quote-style = "double"

[tool.ruff.isort]
lines-after-imports = 2
force-wrap-aliases = true
combine-as-imports = true
force-sort-within-sections = true
known-third-party = ["fastapi", "pydantic", "starlette"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
